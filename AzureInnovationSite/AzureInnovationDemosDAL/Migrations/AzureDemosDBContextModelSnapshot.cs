// <auto-generated />
using System;
using AzureInnovationDemosDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AzureInnovationDemosDAL.Migrations
{
    [DbContext(typeof(AzureDemosDBContext))]
    partial class AzureDemosDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.Demo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSharedEnvironment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Technologies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Demos");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DemoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DemoId");

                    b.HasIndex("TypeId");

                    b.ToTable("DemoAssets");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoAssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DemoAssetTypes");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoAzureResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttemptCount")
                        .HasColumnType("int");

                    b.Property<int>("DemoId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LockedUntil")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DemoId");

                    b.HasIndex("LockedUntil");

                    b.HasIndex("TypeId");

                    b.ToTable("DemoAzureResources");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoAzureResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DemoAzureResourceTypes");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoGuide", b =>
                {
                    b.Property<int>("DemoAssetId")
                        .HasColumnType("int");

                    b.Property<string>("GuideContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DemoAssetId");

                    b.ToTable("DemoGuides");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoSharedCredentials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DemoId")
                        .HasColumnType("int");

                    b.Property<string>("DemoPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DemoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DemoUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DemoId");

                    b.ToTable("DemoSharedCredentials");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DemoTypes");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoUserEnvironment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemoId")
                        .HasColumnType("int");

                    b.Property<string>("EnvironmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnvironmentProvisioned")
                        .HasColumnType("bit");

                    b.Property<string>("EnvironmentURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DemoId");

                    b.HasIndex("UserId");

                    b.ToTable("DemoUserEnvironments");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoUserResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DemoId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("DemoUserResources");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoVM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DemoId")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DemoId");

                    b.ToTable("DemoVMs");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Givenname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVMAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoggin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.UserDemoAzureResource", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("DemoAzureResourceId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "DemoAzureResourceId");

                    b.HasIndex("DemoAzureResourceId");

                    b.ToTable("UserDemoAzureResources");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.UserDemoOrganization", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserDemoOrganizations");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.UserRDPLog", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("DemoId")
                        .HasColumnType("int");

                    b.Property<string>("UserAccount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("DemoId");

                    b.ToTable("UserRDPLogs");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.Demo", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.DemoType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoAsset", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.Demo", "Demo")
                        .WithMany("Assets")
                        .HasForeignKey("DemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzureInnovationDemosDAL.Models.DemoAssetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoAzureResource", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.Demo", "Demo")
                        .WithMany("AzureResources")
                        .HasForeignKey("DemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzureInnovationDemosDAL.Models.DemoAzureResourceType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoGuide", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.DemoAsset", "DemoAsset")
                        .WithMany()
                        .HasForeignKey("DemoAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoSharedCredentials", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.Demo", "Demo")
                        .WithMany("SharedCredentials")
                        .HasForeignKey("DemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoUserEnvironment", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.Demo", "Demo")
                        .WithMany()
                        .HasForeignKey("DemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzureInnovationDemosDAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoUserResource", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.Demo", "Demo")
                        .WithMany()
                        .HasForeignKey("DemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzureInnovationDemosDAL.Models.DemoAssetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.HasOne("AzureInnovationDemosDAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.DemoVM", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.Demo", "Demo")
                        .WithMany("VMs")
                        .HasForeignKey("DemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.UserDemoAzureResource", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.DemoAzureResource", "DemoAzureResource")
                        .WithMany()
                        .HasForeignKey("DemoAzureResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzureInnovationDemosDAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.UserDemoOrganization", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.User", "User")
                        .WithOne("DemoOrganization")
                        .HasForeignKey("AzureInnovationDemosDAL.Models.UserDemoOrganization", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AzureInnovationDemosDAL.Models.UserRDPLog", b =>
                {
                    b.HasOne("AzureInnovationDemosDAL.Models.Demo", "Demo")
                        .WithMany()
                        .HasForeignKey("DemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzureInnovationDemosDAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
